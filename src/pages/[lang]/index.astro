---
import Layout from "../../layouts/Layout.astro";
import Logo from "../../components/Logo.astro";
import { getLangFromUrl, useTranslations } from "../../i18n/utils";
export function getStaticPaths() {
  const STATIC_PATHS = [
    { params: { lang: "en_US" } },
    { params: { lang: "jp" } },
  ];
  return STATIC_PATHS;
}
export const prerender = true;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Layout title="Welcome to Astro.">
  <div
    class="flex flex-wrap mt-16 justify-center content-center w-full bg-primary fixed inset-0 h-[calc(100%-4rem)] z-0 flex-col items-center"
  >
    <div class="flex flex-row items-center mb-8">
      <div class="h-32 w-32 fill-navbar-text-color">
        <Logo />
      </div>
      <h1
        class="font-roboto whitespace-nowrap font-bold text-navbar-text-color sm:visible text-5xl sm:text-7xl roboto"
      >
        nebula.
      </h1>
    </div>
    <input
      id="nebula-input"
      class="font-roboto h-14 rounded-t-2xl w-10/12 rounded-b-2xl border border-input-border-color bg-input p-2 text-center text-xl text-input-text placeholder:text-input-text roboto focus:outline-none md:w-3/12"
      placeholder={t("home.placeholder")}
    />
    <iframe id="neb-iframe" class="hidden z-100 w-full h-full absolute top-0 bottom-0 bg-primary"></iframe>
  </div>
</Layout>
<script>
    import { initSw } from "@utils/registerSW.ts"; //../../utils/registerSW.ts
    import { search } from "@utils/search.ts"; //../../utils/search.ts
    function proxy(term: string) {
        const searchRes = search(term, "https://www.google.com/search?q=%s");
        if (localStorage.getItem("defaultProxy") === "aero")
            return aeroConfig!.prefix + searchRes;
        else
            return __uv$config!.prefix + __uv$config.encodeUrl!(searchRes);
    }
    //we need to rerun this on every page load
    document.addEventListener("astro:page-load", function () {
        //wrap this in a try catch as sometimes this element will not be available on the page
        try {
            const input = document.getElementById("nebula-input") as HTMLInputElement;
            const iframe = document.getElementById("neb-iframe") as HTMLIframeElement;
            input?.addEventListener("keypress", function (event: any) {
                if (event.key === "Enter") {
                    initSw().then(() => {
                        iframe.classList.remove("hidden");
                        iframe.src = proxy(input?.value);
                    })
                }
            })
        }
        catch (_) {
            //we purposely don't return anything
        }
    });
</script>
